from BaseClass.start_class import RouterStore, CallbackDataFilter
from BaseClass.log_class import LogCLassAll
from aiogram import types, F
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from app.inline_button import setting_category, categories
from db_postgres.crud.shares import master_slave
from db_postgres.crud.expenses import delete_expense, update_expenses_amount, update_expenses
from db_postgres.crud.plan_spending import delete_plan_spending, update_plan_spending, update_name_category
from app.inline_back import back_setting_category
from BaseClass.read_class import Images, Read

image_logo = Images.setting()  

class Add_Finance(StatesGroup):
    waiting_new_sum_spending  = State()  
    waiting_category_name = State()  

@RouterStore.my_router.callback_query(CallbackDataFilter("change_category"))
async def change_category(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: change_category")
    await callback.answer()
    await callback.message.edit_media(
    media=types.InputMediaPhoto(media=image_logo, 
                                caption='üóÇÔ∏è‚ú® ¬´–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ —Å–≤–æ–∏—Ö –∑–∞–ø–∞—Å–∞—Ö¬ª\n\n'
                                        '–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—É–º–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ –∏–∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é.\n'),
                                reply_markup=setting_category(),)
    
@RouterStore.my_router.callback_query(CallbackDataFilter("del_category"))
async def choice_category_del(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: choice_category_del")
    await callback.answer()
    await callback.message.delete()
    
    user_id = await master_slave(callback.from_user.id)
    
    map_category = await categories(user_id=user_id, interceptor="del_category_")
    await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    reply_markup=map_category)
    
@RouterStore.my_router.callback_query(F.data.startswith("del_category_"))
async def del_category(callback: types.CallbackQuery):
    category = callback.data.split("_")[-1]
    LogCLassAll().debug(f"Choice category: {category} for delete")
    await callback.message.delete()
    user_id = await master_slave(callback.from_user.id)
    await delete_expense(user_id=user_id,
                         category=category)
    await delete_plan_spending(user_id=user_id, 
                               category=category)
    await callback.message.answer_photo(photo=image_logo,
                                        caption=f"üóëÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞! ‚úÖ",
                                        reply_markup=setting_category())
    
@RouterStore.my_router.callback_query(CallbackDataFilter("change_sum"))
async def choice_change_sum(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: choice_change_sum")
    await callback.answer()
    await callback.message.delete()
    
    user_id = await master_slave(callback.from_user.id)
    
    map_category = await categories(user_id=user_id, interceptor="change_category_")
    await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    reply_markup=map_category)
    
@RouterStore.my_router.callback_query(F.data.startswith("change_category_"))
async def change_sum(callback: types.CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[-1]
    LogCLassAll().debug(f"Choice category: {category} for change sum")
    await state.update_data(category=category)
    await state.set_state(Add_Finance.waiting_new_sum_spending)
    await callback.message.edit_text(f"üìä –°–∫–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç –ø–æ–ª–æ–∂–∏–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category}? ü™ô",
                                     reply_markup=back_setting_category())
    
@RouterStore.my_router.message(Add_Finance.waiting_new_sum_spending)
async def change_sum_in_db(message: types.Message, state: FSMContext):
    LogCLassAll().debug("Add change_sum")
    
    data = await state.get_data()
    user_id = await master_slave(message.from_user.id)
    category = data['category']
    spending = message.text
    
    if await Read.checking_number(spending):
        new_exp = await update_plan_spending(user_id=user_id,
                                   category=category,
                                   new_amount=float(spending))
        
        await update_expenses_amount(user_id=user_id,
                                     category=category,
                                     new_amount=new_exp)
        
        await message.answer_photo(photo=image_logo,
                                    caption='üí∞ –ù–æ–≤–∞—è —Å—É–º–º–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–ª–∞–Ω!\n'
                                            'üìä –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å —É—á—ë—Ç–æ–º –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç–∞ ‚ú®',
                                    reply_markup=setting_category())
        await state.clear()
    else:
        if ',' in spending:
            spending += '\n–ø–æ–º–µ–Ω—è–π—Ç–µ , –Ω–∞ .'
        await message.answer(f"üî¢ –•–º‚Ä¶ —Ç—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ, –∞ –Ω–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ üòÖ\n"
                             f"–í—ã –≤–≤–µ–ª–∏: {spending}")
    
@RouterStore.my_router.callback_query(CallbackDataFilter("rename_category"))
async def rename_category_choice(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: rename_category_choice")
    await callback.answer()
    await callback.message.delete()
    
    user_id = await master_slave(callback.from_user.id)
    
    map_category = await categories(user_id=user_id, interceptor="new_name_")
    await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    reply_markup=map_category)
    
@RouterStore.my_router.callback_query(F.data.startswith("new_name_"))
async def add_category(callback: types.CallbackQuery, state: FSMContext):
        category = callback.data.split("_")[-1]
        await state.update_data(category=category)
        LogCLassAll().debug("Press button: rename")
        await callback.answer()
        await callback.message.edit_text("üëâ –í–≤–µ–¥–∏—Ç–µ üìÇ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤:",
                                  reply_markup=back_setting_category())
        await state.set_state(Add_Finance.waiting_category_name)
    
@RouterStore.my_router.message(Add_Finance.waiting_category_name)
async def add_sum_category(message: types.Message, state: FSMContext):
        if Read.search_symbol(message.text):
                await message.edit_text("üëâ –ü—Ä–æ—Å—Ç–∏ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–∏–º–≤–æ–ª–æ–º '_'\n"
                             "–ü—Ä–∏–¥—É–º–∞–π –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
        else:
                data = await state.get_data()
                user_id = await master_slave(message.from_user.id)
                category = data['category']
                await update_expenses(user_id=user_id,
                                      category=category,
                                      new_category=message.text)
                
                await update_name_category(user_id=user_id,
                                        category=category,
                                        new_name=message.text)
                await message.answer_photo(photo=image_logo,
                                    caption=f'‚úèÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ {message.text}! ‚úÖ',
                                    reply_markup=setting_category())
                await state.clear()
                
                
                
                
            