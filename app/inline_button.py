from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from BaseClass.log_class import LogCLassAll
from db_postgres.crud.shares import status_share_search
from db_postgres.crud.expenses import get_expenses

def app_start():
    inline_kb_list = [
        [
            InlineKeyboardButton(text="üìã –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é",
                              callback_data='press_menu'),
            InlineKeyboardButton(text="‚ÑπÔ∏è –£–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –ø–æ–±–æ–ª—å—à–µ",
                              callback_data='about')
        ],
        [
            InlineKeyboardButton(text="üêô My_Git",
                            url='https://github.com/EgorkaPimp/home_bot'),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

def app_menu():
    inline_kb_list = [
        [
            InlineKeyboardButton(text="‚ûï‚ú® –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                              callback_data='add_category'),
            InlineKeyboardButton(text="üìùüí∏ –í–Ω–µ—Å—Ç–∏ —Ç—Ä–∞—Ç—É",
                              callback_data='add_spending')
        ],
        [
            InlineKeyboardButton(text="üìä‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É",
                              callback_data='show_table'),
            InlineKeyboardButton(text="‚úèÔ∏èüîß –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                              callback_data='change_category')
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                            callback_data='settings'),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

def setting():
    inline_kb_list = [
        [
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥",
                              callback_data='update_period'),
            InlineKeyboardButton(text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                              callback_data='update_period_about')
        ],
        [
            InlineKeyboardButton(text="ü§ù –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ —Ç—Ä–∞—Ç—ã",
                              callback_data='shared_expenses'),
            InlineKeyboardButton(text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                              callback_data='shared_expenses_about')
        ],
        [
            InlineKeyboardButton(text="üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ",
                              callback_data='notification'),
            InlineKeyboardButton(text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                              callback_data='notification_about')
        ],
        [
            InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å—Å—è",
                              callback_data='delete_account'),
            InlineKeyboardButton(text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                              callback_data='delete_account_about')
        ],
        [
            InlineKeyboardButton(text="üåÄüè∞ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                            callback_data='press_menu'),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

def confirmation_deletion():
    inline_kb_list = [
        [
            InlineKeyboardButton(text="–î–∞",
                            callback_data='yes_delete'),
            InlineKeyboardButton(text="–ù–µ—Ç",
                            callback_data='settings')
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

def notification_status(status_notification: int, status_update: int):
    if status_notification == 0:
        button_notification = "–í–∫–ª—é—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"
        notification_callback = "up_notification"
    elif status_notification == 1:
        button_notification = "–í—ã–∫–ª—é—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"
        notification_callback = "down_notification"
    if status_update == 0:
        button_update = "–í–∫–ª—é—á–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"
        update_callback = "up_update"
    elif status_update == 1:
        button_update = "–í—ã–∫–ª—é—á–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"
        update_callback = "down_update"
    inline_kb_list = [
        [
            InlineKeyboardButton(text=button_notification,
                            callback_data=notification_callback)],
        [
            InlineKeyboardButton(text=button_update,
                            callback_data=update_callback)
        ],
        [
            InlineKeyboardButton(text="üîô‚öôÔ∏è –í–µ—Ä–Ω—Ç—å—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                            callback_data='settings')
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

async def categories(user_id: int, interceptor: str):
    LogCLassAll().debug(f"Start search category user: {user_id}")
    categories_db = await get_expenses(user_id=user_id)  
    inline_kb_list = []
    for cat in categories_db:
        format_key = []
        format_key.append(InlineKeyboardButton(text=f"‚ú®{cat.category.capitalize()}",
                                               callback_data=f'{interceptor}_{cat.category.capitalize()}'))
        inline_kb_list.append(format_key)
    back = [InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è",
                                callback_data='press_menu')]
    inline_kb_list.append(back)
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)
    