from BaseClass.start_class import RouterStore, CallbackDataFilter
from BaseClass.log_class import LogCLassAll
from BaseClass.read_class import Read
from db.search import SearchDB
from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from app.inline_button import revers_db_setting, categories, app_menu_revers
from db.update import UpdateDB

class Add_Finance(StatesGroup):
    waiting_change_category = State()
    waiting_change_sum = State()

@RouterStore.my_router.callback_query(CallbackDataFilter("change_category"))
async def change_category(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: change_category")
    await callback.answer()
    image = types.FSInputFile('images/logo.png')
    await callback.message.answer_photo(photo=image,
                                        caption='üóÇÔ∏è‚ú® ¬´–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ —Å–≤–æ–∏—Ö –∑–∞–ø–∞—Å–∞—Ö¬ª\n\n'
                                        '–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—É–º–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
                                        reply_markup=revers_db_setting())
    
    
@RouterStore.my_router.callback_query(CallbackDataFilter("rename_category"))
async def add_spending_choice_category(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: rename_category")
    await callback.answer()
    if await SearchDB().search_user_in_reverse(callback.from_user.id):
        categories_map = await categories(callback.from_user.id, 'rename_category')
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    reply_markup=categories_map)
    else:
        await callback.message.answer("‚ùå–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üóÇÔ∏è \n"
                                      "‚û°Ô∏è –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")
        
@RouterStore.my_router.callback_query(F.data.startswith("rename_category_"))
async def write_new_name_category(callback: types.CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[-1]
    LogCLassAll().debug(f"Choice category change: {category}")
    await state.update_data(category=category)
    await state.set_state(Add_Finance.waiting_change_category)
    await callback.message.edit_text(f"üóÇÔ∏è‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}")
    
@RouterStore.my_router.message(Add_Finance.waiting_change_category)
async def update_name_category(message: types.Message, state: FSMContext):
    LogCLassAll().debug("Rename category")
    if Read.search_symbol(message.text):
        await message.answer("üëâ –ü—Ä–æ—Å—Ç–∏ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–∏–º–≤–æ–ª–æ–º '_'\n"
                             "–ü—Ä–∏–¥—É–º–∞–π –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
    else:
        data = await state.get_data()
        user_id = message.from_user.id
        category = data['category']
        new_name = message.text
        image = types.FSInputFile('images/logo.png')
        await UpdateDB().update_name_category(user_id, category, new_name)
        await state.clear()
        await message.answer_photo(photo=image,
                                    caption=f'üíé –ì–æ—Ç–æ–≤–æ! –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{new_name}" '
                                    f'—É–∂–µ –≤–º–µ—Å—Ç–æ "{category}". ‚ú®',
                                    reply_markup=app_menu_revers())
        
        
        
@RouterStore.my_router.callback_query(CallbackDataFilter("change_sum"))
async def change_sum(callback: types.CallbackQuery):
    LogCLassAll().debug("Press button: change_sum")
    await callback.answer()
    if await SearchDB().search_user_in_reverse(callback.from_user.id):
        categories_map = await categories(callback.from_user.id, 'change_sum')
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    reply_markup=categories_map)
    else:
        await callback.message.answer("‚ùå–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üóÇÔ∏è \n"
                                      "‚û°Ô∏è –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")
        
@RouterStore.my_router.callback_query(F.data.startswith("change_sum_"))
async def write_new_sum(callback: types.CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[-1]
    LogCLassAll().debug(f"Choice sum category change: {category}")
    await state.update_data(category=category)
    await state.set_state(Add_Finance.waiting_change_sum)
    await callback.message.edit_text(f"üóÇÔ∏è‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}")
    
@RouterStore.my_router.message(Add_Finance.waiting_change_sum)
async def update_sum_category(message: types.Message, state: FSMContext):
    LogCLassAll().debug("Start update sum category")
    data = await state.get_data()
    user_id = message.from_user.id
    category = data['category']
    new_sum = message.text
    image = types.FSInputFile('images/logo.png')
    if await Read.checking_number(new_sum):
        await UpdateDB().update_sum_category(user_id, category, new_sum)
        await message.answer_photo(photo=image,
                                    caption=f'üíé –ì–æ—Ç–æ–≤–æ! –ù–æ–≤–æ–µ —Å—É–º–º–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{new_sum}" \n'
                                    f'–°—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è". ‚ú®',
                                    reply_markup=app_menu_revers())
        await state.clear()
    else:
        if ',' in new_sum:
            new_sum += '\n–ø–æ–º–µ–Ω—è–π—Ç–µ , –Ω–∞ .'
        await message.answer(f"üî¢ –•–º‚Ä¶ —Ç—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ, –∞ –Ω–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ üòÖ\n"
                             f"–í—ã –≤–≤–µ–ª–∏: {new_sum}")